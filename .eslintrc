{
    "extends": ["next/core-web-vitals", "@fullstacksjs/eslint-config/nextjs"],
    "settings": {
        "import/resolver": {
            "typescript": {
                "project": ["tsconfig.json"]
            }
        }
    },
    "rules": {
        "max-lines-per-function": [
            "warn",
            {
                "max": 250,
                "skipComments": true
            }
        ],
        "complexity": [
            "warn",
            {
                "max": 17
            }
        ],
        "padding-line-between-statements": [
            "warn",
            {
                "blankLine": "always",
                "prev": "*",
                "next": [
                    "export",
                    "return",
                    "class",
                    "for",
                    "while",
                    "switch",
                    "do",
                    "directive",
                    "function",
                    "iife",
                    "block-like",
                    "multiline-const",
                    "multiline-let"
                ]
            }
        ],
        "@typescript-eslint/naming-convention": [
            "warn",
            {
                "selector": "default",
                "format": ["camelCase"]
            },
            {
                "selector": "function",
                "format": ["camelCase", "PascalCase"]
            },
            // variables, CONSTANTS, ReactComponents
            {
                "selector": "variable",
                "format": ["camelCase", "UPPER_CASE", "PascalCase"]
            },
            {
                "selector": "parameter",
                "format": ["camelCase", "PascalCase"],
                "leadingUnderscore": "allowSingleOrDouble"
            },
            {
                "selector": "memberLike",
                "format": null
            },
            {
                "selector": "memberLike",
                "modifiers": ["static"],
                "format": ["camelCase", "PascalCase"],
                "leadingUnderscore": "allow"
            },
            {
                "selector": "memberLike",
                "modifiers": ["private"],
                "format": ["camelCase"],
                "leadingUnderscore": "allow"
            },
            {
                "selector": "typeLike",
                "format": ["PascalCase"]
            },
            {
                "selector": "enumMember",
                "format": ["PascalCase"]
            },
            // disallow I prefix for interfaces
            {
                "selector": "interface",
                "format": ["PascalCase"],
                "custom": { "regex": "^I[A-Z]", "match": false }
            }
        ],
        "react/function-component-definition": ["off"],
        "react/jsx-no-leaked-render": "off"
    }
}
